<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexCondition:SettingsLauncherFragment.kt$SettingsLauncherFragment$newValue is Set&lt;*&gt; &amp;&amp; pref is MultiSelectListPreference &amp;&amp; newValue.contains("apps;home_apps") &amp;&amp; !pref.values.contains("apps;home_apps")</ID>
    <ID>CyclomaticComplexMethod:EnableDesktopWidgets.kt$EnableDesktopWidgets$override fun handleLoadPackage(lpParam: XC_LoadPackage.LoadPackageParam)</ID>
    <ID>CyclomaticComplexMethod:Preferences.kt$BasePreferences$@Suppress("UNCHECKED_CAST") fun &lt;T : Any&gt; getDefault(@StringRes nameRes: Int, type: KClass&lt;T&gt;): T</ID>
    <ID>EmptyDefaultConstructor:SettingsActivity.kt$SettingsActivity$()</ID>
    <ID>EmptyFunctionBlock:SettingsMiscFragment.kt$SettingsMiscFragment${ }</ID>
    <ID>ExplicitItLambdaParameter:AddUserSwitcherToQs.kt$AddUserSwitcherToQs${ it -&gt; layoutParams = it }</ID>
    <ID>ExplicitItLambdaParameter:Preferences.kt$XPreferences${ it -&gt; if(!it.file.exists()) Log.ix("'${group.prefName}' not yet created. Using defaults.") else if (!it.file.canRead()) Log.ex("CRITICAL: Preferences file '${group.prefName}' not readable") try { @Suppress("DEPRECATION") it.registerOnSharedPreferenceChangeListener(this) } catch (e: UnsupportedOperationException) { Log.wx("Failed to register XPreference change listener", e) } }</ID>
    <ID>ForEachOnRange:DumpTools.kt$DumpTools$0..&lt;v.childCount</ID>
    <ID>ForbiddenComment:MainHookEntry.kt$// TODO: EAC activity based settings</ID>
    <ID>ForbiddenComment:MainHookEntry.kt$// TODO: Hide app labels</ID>
    <ID>ForbiddenComment:MainHookEntry.kt$// TODO: MMKV editor</ID>
    <ID>ForbiddenComment:MainHookEntry.kt$// TODO: catch and report: NoSuchElementException: Sequence is empty</ID>
    <ID>ForbiddenComment:MainHookEntry.kt$// TODO: catch and report: exceptions in hook callbacks</ID>
    <ID>ImplicitDefaultLocale:EnableDesktopWidgets.kt$EnableDesktopWidgets$String.format( "%s (%s)", label, // Short provider name info.provider.className .split("\\.".toRegex()) .dropLastWhile(String::isEmpty) .toTypedArray() .takeIf { it.isNotEmpty() } ?.last() ?.replace("Provider", "") ?: "builtin" )</ID>
    <ID>LongMethod:EnableDesktopWidgets.kt$EnableDesktopWidgets$override fun handleLoadPackage(lpParam: XC_LoadPackage.LoadPackageParam)</ID>
    <ID>LongParameterList:DialogExtensions.kt$( layoutInflater: LayoutInflater, @StringRes title: Int, @StringRes hint: Int, value: String, isNumberInput: Boolean, suffix: String?, callback: ((String?) -&gt; Unit) )</ID>
    <ID>LongParameterList:DialogExtensions.kt$( layoutInflater: LayoutInflater, title: String?, hint: String?, value: String, isNumberInput: Boolean, suffix: String?, callback: ((String?) -&gt; Unit) )</ID>
    <ID>MagicNumber:AddLauncherSettingsMenu.kt$AddLauncherSettingsMenu$25</ID>
    <ID>MagicNumber:AddUserSwitcherToQs.kt$AddUserSwitcherToQs$12</ID>
    <ID>MagicNumber:AddUserSwitcherToQs.kt$AddUserSwitcherToQs$26</ID>
    <ID>MagicNumber:AddUserSwitcherToQs.kt$AddUserSwitcherToQs$6</ID>
    <ID>MagicNumber:EnableDesktopWidgets.kt$EnableDesktopWidgets$2</ID>
    <ID>MagicNumber:EnableDesktopWidgets.kt$EnableDesktopWidgets$3</ID>
    <ID>MagicNumber:EnableDesktopWidgets.kt$EnableDesktopWidgets$4</ID>
    <ID>MagicNumber:EnableDesktopWidgets.kt$EnableDesktopWidgets$6</ID>
    <ID>MagicNumber:QuickTileGridSize.kt$QuickTileGridSize$4</ID>
    <ID>MagicNumber:SettingsActivity.kt$SettingsActivity$100</ID>
    <ID>MagicNumber:SettingsLauncherFragment.kt$SettingsLauncherFragment$16</ID>
    <ID>MagicNumber:SettingsQsFragment.kt$SettingsQsFragment$10</ID>
    <ID>MagicNumber:SettingsRecentsFragment.kt$SettingsRecentsFragment$100</ID>
    <ID>MagicNumber:SettingsRecentsFragment.kt$SettingsRecentsFragment$16</ID>
    <ID>MagicNumber:SettingsStatusBarFragment.kt$SettingsStatusBarFragment$10</ID>
    <ID>MaxLineLength:AddLauncherSettingsMenu.kt$AddLauncherSettingsMenu$.</ID>
    <ID>MaxLineLength:AddLauncherSettingsMenu.kt$AddLauncherSettingsMenu$val</ID>
    <ID>MaxLineLength:CustomizeRecents.kt$CustomizeRecents$return</ID>
    <ID>MaxLineLength:EnableDesktopWidgets.kt$EnableDesktopWidgets$ConstructorFinder.fromClass("com.onyx.common.applications.appwidget.model.AppWidgetItemViewModel")</ID>
    <ID>MaxLineLength:EnableDesktopWidgets.kt$EnableDesktopWidgets$val</ID>
    <ID>MaxLineLength:ModManager.kt$ModManager$Log.dx("Context package name does not match host package name! Context not updated. (${context.packageName} != ${EzXHelper.hostPackageName})")</ID>
    <ID>MaxLineLength:SettingsActivity.kt$SettingsActivity$modifiedPackages.containsAll(setOf(SYSTEM_UI_PACKAGE, LAUNCHER_PACKAGE)) -&gt; getString(R.string.status_needs_system_ui_launcher_restart)</ID>
    <ID>MaxLineLength:SettingsActivity.kt$SettingsActivity$val topFragment = supportFragmentManager.getBackStackEntryAt(supportFragmentManager.backStackEntryCount - 1)</ID>
    <ID>MaxLineLength:SettingsLauncherFragment.kt$SettingsLauncherFragment$private val barHiddenItems by lazy { findPreference&lt;MultiSelectListPreference&gt;(getString(R.string.key_launcher_bar_hidden_items)) }</ID>
    <ID>MaxLineLength:SettingsLauncherFragment.kt$SettingsLauncherFragment$private val desktopColumns by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_launcher_desktop_column_count)) }</ID>
    <ID>MaxLineLength:SettingsLauncherFragment.kt$SettingsLauncherFragment$private val desktopDock by lazy { findPreference&lt;MaterialSwitchPreference&gt;(getString(R.string.key_launcher_desktop_show_dock)) }</ID>
    <ID>MaxLineLength:SettingsLauncherFragment.kt$SettingsLauncherFragment$private val desktopDockColumns by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_launcher_desktop_dock_column_count)) }</ID>
    <ID>MaxLineLength:SettingsLauncherFragment.kt$SettingsLauncherFragment$private val desktopRows by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_launcher_desktop_row_count)) }</ID>
    <ID>MaxLineLength:SettingsLauncherFragment.kt$SettingsLauncherFragment$private val settingsAddedShortcuts by lazy { findPreference&lt;MultiSelectListPreference&gt;(getString(R.string.key_launcher_settings_added_shortcuts)) }</ID>
    <ID>MaxLineLength:SettingsRecentsFragment.kt$SettingsRecentsFragment$private val gridColumnsLandscape by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_recents_grid_column_count_landscape)) }</ID>
    <ID>MaxLineLength:SettingsRecentsFragment.kt$SettingsRecentsFragment$private val gridColumnsPortrait by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_recents_grid_column_count_portrait)) }</ID>
    <ID>MaxLineLength:SettingsRecentsFragment.kt$SettingsRecentsFragment$private val gridRowsLandscape by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_recents_grid_row_count_landscape)) }</ID>
    <ID>MaxLineLength:SettingsRecentsFragment.kt$SettingsRecentsFragment$private val gridRowsPortrait by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_recents_grid_row_count_portrait)) }</ID>
    <ID>MaxLineLength:SettingsStatusBarFragment.kt$SettingsStatusBarFragment$private val maxNotificationIcons by lazy { findPreference&lt;EditTextPreference&gt;(getString(R.string.key_status_bar_status_icons_max_notification_icons)) }</ID>
    <ID>MaxLineLength:ShowAdditionalStatusIcons.kt$ShowAdditionalStatusIcons$"refresh_mode" -&gt; param.args[1] = preferences.get&lt;Boolean&gt;(R.string.key_status_bar_status_icons_show_refresh_mode)</ID>
    <ID>MaxLineLength:ShowAdditionalStatusIcons.kt$ShowAdditionalStatusIcons$"tp_touch_mode" -&gt; param.args[1] = preferences.get&lt;Boolean&gt;(R.string.key_status_bar_status_icons_show_touch_mode)</ID>
    <ID>MaxLineLength:ShowAppsToolbar.kt$ShowAppsToolbar$element.className.contains("AppsListFragment") &amp;&amp; element.methodName == "initTitleBarView"</ID>
    <ID>MaxLineLength:ShowAppsToolbar.kt$ShowAppsToolbar$param.args[1] = preferences.get&lt;String&gt;(R.string.key_launcher_desktop_toolbar_state) == "visible"</ID>
    <ID>MaxLineLength:WorldReadableDataStore.kt$WorldReadableDataStore$?:</ID>
    <ID>NewLineAtEndOfFile:AddFunctionBarSpacer.kt$me.timschneeberger.onyxtweaks.mods.launcher.AddFunctionBarSpacer.kt</ID>
    <ID>NewLineAtEndOfFile:AddGrayscaleModeQsTile.kt$me.timschneeberger.onyxtweaks.mods.systemui.AddGrayscaleModeQsTile.kt</ID>
    <ID>NewLineAtEndOfFile:AddLauncherSettingsMenu.kt$me.timschneeberger.onyxtweaks.mods.launcher.AddLauncherSettingsMenu.kt</ID>
    <ID>NewLineAtEndOfFile:AddSettingCategories.kt$me.timschneeberger.onyxtweaks.mods.launcher.AddSettingCategories.kt</ID>
    <ID>NewLineAtEndOfFile:AddUserSwitcherToQs.kt$me.timschneeberger.onyxtweaks.mods.shared.AddUserSwitcherToQs.kt</ID>
    <ID>NewLineAtEndOfFile:AppIconPreference.kt$me.timschneeberger.onyxtweaks.ui.preferences.AppIconPreference.kt</ID>
    <ID>NewLineAtEndOfFile:AppItemModelWrapper.kt$me.timschneeberger.onyxtweaks.mods.utils.wrappers.AppItemModelWrapper.kt</ID>
    <ID>NewLineAtEndOfFile:ChangeFunctionBarLocation.kt$me.timschneeberger.onyxtweaks.mods.launcher.ChangeFunctionBarLocation.kt</ID>
    <ID>NewLineAtEndOfFile:CompactQsPanel.kt$me.timschneeberger.onyxtweaks.mods.systemui.CompactQsPanel.kt</ID>
    <ID>NewLineAtEndOfFile:CompatExtensions.kt$me.timschneeberger.onyxtweaks.ui.utils.CompatExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:ContextExtensions.kt$me.timschneeberger.onyxtweaks.mods.utils.ContextExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:ContextExtensions.kt$me.timschneeberger.onyxtweaks.ui.utils.ContextExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:CustomLogger.kt$me.timschneeberger.onyxtweaks.utils.CustomLogger.kt</ID>
    <ID>NewLineAtEndOfFile:CustomizeRecents.kt$me.timschneeberger.onyxtweaks.mods.systemui.CustomizeRecents.kt</ID>
    <ID>NewLineAtEndOfFile:DesktopGridSize.kt$me.timschneeberger.onyxtweaks.mods.launcher.DesktopGridSize.kt</ID>
    <ID>NewLineAtEndOfFile:DialogExtensions.kt$me.timschneeberger.onyxtweaks.ui.utils.DialogExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:DisableAppFilter.kt$me.timschneeberger.onyxtweaks.mods.launcher.DisableAppFilter.kt</ID>
    <ID>NewLineAtEndOfFile:DumpTools.kt$me.timschneeberger.onyxtweaks.mods.utils.DumpTools.kt</ID>
    <ID>NewLineAtEndOfFile:EnableDesktopWidgets.kt$me.timschneeberger.onyxtweaks.mods.launcher.EnableDesktopWidgets.kt</ID>
    <ID>NewLineAtEndOfFile:EnableDock.kt$me.timschneeberger.onyxtweaks.mods.launcher.EnableDock.kt</ID>
    <ID>NewLineAtEndOfFile:EnableHeadsUpNotifications.kt$me.timschneeberger.onyxtweaks.mods.systemui.EnableHeadsUpNotifications.kt</ID>
    <ID>NewLineAtEndOfFile:EnableKeyboardSettings.kt$me.timschneeberger.onyxtweaks.mods.launcher.EnableKeyboardSettings.kt</ID>
    <ID>NewLineAtEndOfFile:EnableWallpaper.kt$me.timschneeberger.onyxtweaks.mods.shared.EnableWallpaper.kt</ID>
    <ID>NewLineAtEndOfFile:EzXExtensions.kt$me.timschneeberger.onyxtweaks.mods.utils.EzXExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:FuncExtensions.kt$me.timschneeberger.onyxtweaks.utils.FuncExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:HideFunctionBarItems.kt$me.timschneeberger.onyxtweaks.mods.launcher.HideFunctionBarItems.kt</ID>
    <ID>NewLineAtEndOfFile:HideNotificationIconBorders.kt$me.timschneeberger.onyxtweaks.mods.systemui.HideNotificationIconBorders.kt</ID>
    <ID>NewLineAtEndOfFile:HideTopBorder.kt$me.timschneeberger.onyxtweaks.mods.launcher.HideTopBorder.kt</ID>
    <ID>NewLineAtEndOfFile:ISystemUiActivityStarter.kt$me.timschneeberger.onyxtweaks.mods.base.ISystemUiActivityStarter.kt</ID>
    <ID>NewLineAtEndOfFile:LauncherLifecycleHook.kt$me.timschneeberger.onyxtweaks.mods.launcher.LauncherLifecycleHook.kt</ID>
    <ID>NewLineAtEndOfFile:LifecycleBroadcastHook.kt$me.timschneeberger.onyxtweaks.mods.base.LifecycleBroadcastHook.kt</ID>
    <ID>NewLineAtEndOfFile:ListWrapper.kt$me.timschneeberger.onyxtweaks.mods.utils.wrappers.ListWrapper.kt</ID>
    <ID>NewLineAtEndOfFile:MaterialSwitchPreference.kt$me.timschneeberger.onyxtweaks.ui.preferences.MaterialSwitchPreference.kt</ID>
    <ID>NewLineAtEndOfFile:ModEventReceiver.kt$me.timschneeberger.onyxtweaks.receiver.ModEventReceiver.kt</ID>
    <ID>NewLineAtEndOfFile:ModManager.kt$me.timschneeberger.onyxtweaks.mods.ModManager.kt</ID>
    <ID>NewLineAtEndOfFile:ModPack.kt$me.timschneeberger.onyxtweaks.mods.base.ModPack.kt</ID>
    <ID>NewLineAtEndOfFile:ModPacks.kt$me.timschneeberger.onyxtweaks.mods.ModPacks.kt</ID>
    <ID>NewLineAtEndOfFile:MoveNotificationHeaderToFooter.kt$me.timschneeberger.onyxtweaks.mods.systemui.MoveNotificationHeaderToFooter.kt</ID>
    <ID>NewLineAtEndOfFile:ObjectWrapper.kt$me.timschneeberger.onyxtweaks.mods.utils.wrappers.ObjectWrapper.kt</ID>
    <ID>NewLineAtEndOfFile:OnyxTweakApp.kt$me.timschneeberger.onyxtweaks.OnyxTweakApp.kt</ID>
    <ID>NewLineAtEndOfFile:Preferences.kt$me.timschneeberger.onyxtweaks.utils.Preferences.kt</ID>
    <ID>NewLineAtEndOfFile:QuickTileGridSize.kt$me.timschneeberger.onyxtweaks.mods.systemui.QuickTileGridSize.kt</ID>
    <ID>NewLineAtEndOfFile:RemoveRegalModeRestriction.kt$me.timschneeberger.onyxtweaks.mods.shared.RemoveRegalModeRestriction.kt</ID>
    <ID>NewLineAtEndOfFile:RenderTools.kt$me.timschneeberger.onyxtweaks.mods.utils.RenderTools.kt</ID>
    <ID>NewLineAtEndOfFile:SdkCheck.kt$me.timschneeberger.onyxtweaks.utils.SdkCheck.kt</ID>
    <ID>NewLineAtEndOfFile:SetMaxNotificationIcons.kt$me.timschneeberger.onyxtweaks.mods.systemui.SetMaxNotificationIcons.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsAboutFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsAboutFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsActivity.kt$me.timschneeberger.onyxtweaks.ui.activities.SettingsActivity.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsBaseFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsBaseFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsEinkFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsEinkFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsLauncherFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsLauncherFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsMiscFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsMiscFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsQsFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsQsFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsRecentsFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsRecentsFragment.kt</ID>
    <ID>NewLineAtEndOfFile:SettingsStatusBarFragment.kt$me.timschneeberger.onyxtweaks.ui.fragments.SettingsStatusBarFragment.kt</ID>
    <ID>NewLineAtEndOfFile:ShowAdditionalStatusIcons.kt$me.timschneeberger.onyxtweaks.mods.systemui.ShowAdditionalStatusIcons.kt</ID>
    <ID>NewLineAtEndOfFile:ShowAppsToolbar.kt$me.timschneeberger.onyxtweaks.mods.launcher.ShowAppsToolbar.kt</ID>
    <ID>NewLineAtEndOfFile:ShowChineseBookStore.kt$me.timschneeberger.onyxtweaks.mods.launcher.ShowChineseBookStore.kt</ID>
    <ID>NewLineAtEndOfFile:ShowWifiActivityIndicators.kt$me.timschneeberger.onyxtweaks.mods.systemui.ShowWifiActivityIndicators.kt</ID>
    <ID>NewLineAtEndOfFile:SystemUiLifecycleHook.kt$me.timschneeberger.onyxtweaks.mods.systemui.SystemUiLifecycleHook.kt</ID>
    <ID>NewLineAtEndOfFile:TargetPackages.kt$me.timschneeberger.onyxtweaks.mods.base.TargetPackages.kt</ID>
    <ID>NewLineAtEndOfFile:UseNotificationIconColors.kt$me.timschneeberger.onyxtweaks.mods.shared.UseNotificationIconColors.kt</ID>
    <ID>NewLineAtEndOfFile:ViewExtensions.kt$me.timschneeberger.onyxtweaks.ui.utils.ViewExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:WorldReadableDataStore.kt$me.timschneeberger.onyxtweaks.ui.preferences.WorldReadableDataStore.kt</ID>
    <ID>ReturnCount:ModEventReceiver.kt$ModEventReceiver.Companion$fun parseIntent(intent: Intent): Pair&lt;ModEvents, Bundle?&gt;?</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:CustomLogger.kt$CustomLogger$Throwable()</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:ShowAppsToolbar.kt$ShowAppsToolbar$Throwable()</ID>
    <ID>ThrowsCount:Preferences.kt$BasePreferences$@Suppress("UNCHECKED_CAST") fun &lt;T : Any&gt; getDefault(@StringRes nameRes: Int, type: KClass&lt;T&gt;): T</ID>
    <ID>TooGenericExceptionCaught:AddLauncherSettingsMenu.kt$AddLauncherSettingsMenu.SettingsClickHandler$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AddUserSwitcherToQs.kt$AddUserSwitcherToQs$ex: Exception</ID>
    <ID>TooGenericExceptionCaught:EzXExtensions.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:RenderTools.kt$e: Exception</ID>
    <ID>TooManyFunctions:ContextExtensions.kt$ContextExtensions</ID>
    <ID>TooManyFunctions:EzXExtensions.kt$me.timschneeberger.onyxtweaks.mods.utils.EzXExtensions.kt</ID>
    <ID>TooManyFunctions:Preferences.kt$BasePreferences : OnSharedPreferenceChangeListener</ID>
    <ID>TooManyFunctions:SettingsActivity.kt$SettingsActivity : AppCompatActivityOnModEventReceivedOnPreferenceStartFragmentCallback</ID>
    <ID>TooManyFunctions:WorldReadableDataStore.kt$WorldReadableDataStore : PreferenceDataStoreOnSharedPreferenceChangeListener</ID>
    <ID>UnusedPrivateMember:HideFunctionBarItems.kt$HideFunctionBarItems$private fun verifyContainerFunctionItem(item: String): Boolean</ID>
    <ID>UseCheckOrError:Preferences.kt$BasePreferences$throw IllegalStateException("Preference key '$key' has no default set")</ID>
    <ID>UseCheckOrError:Preferences.kt$BasePreferences$throw IllegalStateException("This preferences implementation is read-only")</ID>
    <ID>UseCheckOrError:SettingsBaseFragment.kt$SettingsBaseFragment$throw IllegalStateException("No PreferenceGroup annotation found on ${this::class.simpleName}")</ID>
  </CurrentIssues>
</SmellBaseline>
